name: push-build

on:
  push:
    branches:
      - 'main'
      - 'develop'
    paths:
      - 'src/**'
      - 'test/**'
      - '.github/workflows/push-build.yaml'
  # pull_request:
  #   branches: [main, develop]
  #   types: [opened, reopened, synchronize, edited]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

env:
  SERVICE_NAME: students-courses-api
  AWS_DEFAULT_REGION: us-east-1
  IAM_ROLE_NAME: Github-CICD-OIDC

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      id-token: write # This is required for requesting the JWT
      contents: read  # This is required for actions/checkout
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - id: aws-config
      name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        role-to-assume: arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ env.IAM_ROLE_NAME }}
        aws-region: ${{ env.AWS_DEFAULT_REGION }}
        role-session-name: Github-Actions-Session

    - id: login-ecr
      name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    - id: set-short-sha
      name: Set short SHA and ECR registry URL as environment variables
      run: |
        echo "SHORT_SHA=$(git rev-parse --short=7 HEAD)" >> $GITHUB_ENV
        echo "REGISTRY_URL=${{ steps.login-ecr.outputs.registry }}" >> $GITHUB_ENV

    - id: build-image
      name: Build image
      env:
        REGISTRY_URL: ${{ env.REGISTRY_URL }}
        SERVICE_NAME: ${{ env.SERVICE_NAME }}
        SERVICE_TAG: ${{ env.SHORT_SHA }}
      run: |
        echo "Building $REGISTRY_URL/$SERVICE_NAME:$SERVICE_TAG"
        docker image build -t $REGISTRY_URL/$SERVICE_NAME:$SERVICE_TAG .

    - id: lint-dockerfile
      name: Lint Dockerfile
      run: |
        docker container run --rm --name hadolint -i hadolint/hadolint < ./Dockerfile

    - id: lint-and-test-service
      name: Lint and Test Service
      env:
        REGISTRY_URL: ${{ env.REGISTRY_URL }}
        SERVICE_NAME: ${{ env.SERVICE_NAME }}
        SERVICE_TAG: ${{ env.SHORT_SHA }}
      run: |
        docker container run --rm --name tmp-lint --entrypoint "" $REGISTRY_URL/$SERVICE_NAME:$SERVICE_TAG sh -c "yarn install && yarn lint && yarn test"

    - id: publish-image
      name: Publish
      if: github.ref == 'refs/heads/main'
      env:
        REGISTRY_URL: ${{ env.REGISTRY_URL }}
        SERVICE_NAME: ${{ env.SERVICE_NAME }}
        SERVICE_TAG: ${{ env.SHORT_SHA }}
      run: |
        echo "Pushing $REGISTRY_URL/$SERVICE_NAME:$SERVICE_TAG"
        docker image push $REGISTRY_URL/$SERVICE_NAME:$SERVICE_TAG
